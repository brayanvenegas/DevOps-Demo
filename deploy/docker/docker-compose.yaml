version: "3"

services:
  jenkins:
    container_name: my_custom_jenkins
    image: jenkins/jenkins:alpine
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      # Named  Docker volume details at the bottom
      - jenkins_home:/var/jenkins_home
    networks:
      - net_devops
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 2G

  sonarqube:
    container_name: my_custom_sonarqube
    depends_on:
      - db
    # build: ./sonarqube_home
    image: sonarqube

    ports:
      - "9000:9000"
    networks:
      - net_devops
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      #Directorio para agregar el plugin manualmente
      - ./sonarqube/sonarqube-community-branch-plugin-1.12.0.jar:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.12.0.jar
      - ./Sonarqube/sonarqube-community-branch-plugin-1.12.0.jar:/opt/sonarqube/lib/common/sonarqube-communitty-branch-plugin-1.12.0.jar

    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 3G

  db:
    image: postgres:11
    container_name: postgres
    networks:
      - net_devops
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

# To use docker-volume (custom_jenkins_home) instead of a directory path-file
volumes:
  jenkins_home:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:

networks:
  net_devops:
